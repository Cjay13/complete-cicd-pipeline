pipeline {
    agent any

    tools {
        jdk 'jdk17'
        maven 'maven3'

    }

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'stage', credentialsId: 'git-cred', url: 'https://github.com/Cjay13/complete-cicd-pipeline.git' 
            }
        }

        stage('Code Compile') {
            steps {
                sh "mvn compile" 
            }
        }

        stage('Code Test') {
            steps {
                sh "mvn test" 
            }
        }

        stage('Vulnerability scan') {
            steps {
                sh "trivy fs --format table -o trivy-fs-report.html ." 
            }
        }

        stage('Sonarqube Analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=ecom_crm \
                            -Dsonar.projectKey=ecom_crm \
                            -Dsonar.java.binaries=. ''' 
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script{
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }
        
        stage('Code Buil') {
            steps {
                sh "mvn build" 
            }
        }

    }    
}